{"version":3,"sources":["app.coffee","controllers/_template.coffee","controllers/login.coffee","controllers/pages.coffee","controllers/programms.coffee","controllers/sass.coffee","controllers/search.coffee","controllers/variables.coffee","directives/bs-select.coffee","directives/comments.coffee","directives/counter.coffee","directives/editable.coffee","directives/email.coffee","directives/input-comment.coffee","directives/multi-select.coffee","directives/order-by.coffee","directives/pencil-input.coffee","directives/phones.coffee","directives/plural.coffee","directives/plus.coffee","directives/progamm-item.coffee","directives/search.coffee","directives/select-new.coffee","directives/select.coffee","directives/sms.coffee","directives/tutor-photo.coffee","directives/user-switch.coffee","directives/user.coffee","factory/factory.coffee","resources/resources.coffee","service/ace.coffee","service/crud.coffee","service/export.coffee","service/factory.coffee","service/programm.coffee"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["angular.module(\"Egecms\", ['ngSanitize', 'ngResource', 'ngAnimate', 'ui.sortable', 'ui.bootstrap', 'angular-ladda', 'angularFileUpload', 'angucomplete-alt'])\n    .config [\n        '$compileProvider'\n        ($compileProvider) ->\n            $compileProvider.aHrefSanitizationWhitelist /^\\s*(https?|ftp|mailto|chrome-extension|sip):/\n\t]\n    .filter 'cut', ->\n      (value, wordwise, max, nothing = '', tail) ->\n        if !value\n          return nothing\n        max = parseInt(max, 10)\n        if !max\n          return value\n        if value.length <= max\n          return value\n        value = value.substr(0, max)\n        if wordwise\n          lastspace = value.lastIndexOf(' ')\n          if lastspace != -1\n            #Also remove . and , so its gives a cleaner result.\n            if value.charAt(lastspace - 1) == '.' or value.charAt(lastspace - 1) == ','\n              lastspace = lastspace - 1\n            value = value.substr(0, lastspace)\n        value + (tail or '…')\n    .filter 'hideZero', ->\n        (item) ->\n            if item > 0 then item else null\n    .directive 'convertToNumber', ->\n        {\n            require: 'ngModel'\n            link: (scope, element, attrs, ngModel) ->\n                ngModel.$parsers.push (val) ->\n                    parseInt(val,10)\n                ngModel.$formatters.push (val) ->\n                    if val or val is 0 then '' + val else ''\n        }\n    .run ($rootScope, $q) ->\n        # отвечает за загрузку данных\n        $rootScope.dataLoaded = $q.defer()\n        # конец анимации front-end загрузки и rebind маск\n        $rootScope.frontendStop = (rebind_masks = true) ->\n            $rootScope.frontend_loading = false\n            $rootScope.dataLoaded.resolve(true)\n            rebindMasks() if rebind_masks\n\n        $rootScope.range = (min, max, step) ->\n          step = step or 1\n          input = []\n          i = min\n          while i <= max\n            input.push i\n            i += step\n          input\n\n          # skip_values – какие значения в enum пропускать\n          # allowed_user_ids – пользователи, которым разрешено выбирать значения\n          # recursion – функция была запущена рекурсивно (внизу)\n        $rootScope.toggleEnum = (ngModel, status, ngEnum, skip_values = [], allowed_user_ids = [], recursion = false) ->\n            # если установлено значение, которое пропускается для обычных пользователей,\n            # то запрещать его смену\n            return if not recursion and parseInt(ngModel[status]) in skip_values and $rootScope.$$childHead.user.id not in allowed_user_ids\n\n            statuses = Object.keys(ngEnum)\n            status_id = statuses.indexOf ngModel[status].toString()\n            status_id++\n            status_id = 0 if status_id > (statuses.length - 1)\n            ngModel[status] = statuses[status_id]\n            # if in skip_values\n            $rootScope.toggleEnum(ngModel, status, ngEnum, skip_values, allowed_user_ids, true) if status_id in skip_values and $rootScope.$$childHead.user.id not in allowed_user_ids\n\n        # обновить + ждать ответа от сервера\n        $rootScope.toggleEnumServer = (ngModel, status, ngEnum, Resource) ->\n            statuses = Object.keys(ngEnum)\n            status_id = statuses.indexOf ngModel[status].toString()\n            status_id++\n            status_id = 0 if status_id > (statuses.length - 1)\n\n            update_data = {id: ngModel.id}\n            update_data[status] = status_id\n\n            Resource.update update_data, ->\n                ngModel[status] = statuses[status_id]\n\n        $rootScope.formatDateTime = (date) ->\n            moment(date).format \"DD.MM.YY в HH:mm\"\n\n        $rootScope.formatDate = (date, full_year = false) ->\n            return '' if not date\n            moment(date).format \"DD.MM.YY\" + (if full_year then \"YY\" else \"\")\n\n        $rootScope.dialog = (id) ->\n            $(\"##{id}\").modal 'show'\n            return\n\n        $rootScope.closeDialog = (id) ->\n            $(\"##{id}\").modal 'hide'\n            return\n\n        $rootScope.ajaxStart = ->\n            ajaxStart()\n            $rootScope.saving = true\n\n        $rootScope.ajaxEnd = ->\n            ajaxEnd()\n            $rootScope.saving = false\n\n        $rootScope.findById = (object, id) ->\n            _.findWhere(object, {id: parseInt(id)})\n\n        # prop2 – второй уровень вложенности\n        $rootScope.total = (array, prop, prop2 = false) ->\n            sum = 0\n            $.each array, (index, value) ->\n                v = value[prop]\n                v = v[prop2] if prop2\n                sum += v\n            sum\n\n        $rootScope.deny = (ngModel, prop) ->\n            ngModel[prop] = +(!ngModel[prop])\n\n        $rootScope.formatBytes = (bytes) ->\n          if bytes < 1024\n            bytes + ' Bytes'\n          else if bytes < 1048576\n            (bytes / 1024).toFixed(1) + ' KB'\n          else if bytes < 1073741824\n            (bytes / 1048576).toFixed(1) + ' MB'\n          else\n            (bytes / 1073741824).toFixed(1) + ' GB'\n","# angular\n#     .module 'Egecms'\n#     .controller 'VariablesIndex', ($scope, $attrs, IndexService, Variable) ->\n#         bindArguments($scope, arguments)\n#         angular.element(document).ready ->\n#             IndexService.init(Variable, $scope.current_page, $attrs)\n#     .controller 'VariablesForm', ($scope, $attrs, $timeout, FormService, Variable) ->\n#         bindArguments($scope, arguments)\n#         angular.element(document).ready ->\n#             FormService.init(Variable, $scope.id, $scope.model)\n","angular\n    .module 'Egecms'\n    .controller 'LoginCtrl', ($scope, $http) ->\n        angular.element(document).ready ->\n            $scope.l = Ladda.create(document.querySelector('#login-submit'))\n\n        $scope.checkFields = ->\n            $scope.l.start()\n            ajaxStart()\n            $scope.in_process = true\n            $http.post 'login',\n                login: $scope.login\n                password: $scope.password\n            .then (response) ->\n                if response.data is true\n                    location.reload()\n                else\n                    $scope.in_process = false\n                    ajaxEnd()\n                    $scope.l.stop()\n                    notifyError \"Неправильная пара логин-пароль\"\n","angular\n    .module 'Egecms'\n    .controller 'PagesIndex', ($scope, $attrs, $timeout, IndexService, Page, Published, ExportService) ->\n        bindArguments($scope, arguments)\n        ExportService.init({controller: 'pages'})\n\n        angular.element(document).ready ->\n            IndexService.init(Page, $scope.current_page, $attrs, false)\n\n    .controller 'PagesForm', ($scope, $http, $attrs, $timeout, FormService, AceService, Page, Published, UpDown) ->\n        bindArguments($scope, arguments)\n\n        empty_useful = {text: null, page_id_field: null}\n\n        angular.element(document).ready ->\n            FormService.init(Page, $scope.id, $scope.model)\n            FormService.dataLoaded.promise.then ->\n                FormService.model.useful = [angular.copy(empty_useful)] if (not FormService.model.useful or not FormService.model.useful.length)\n                AceService.initEditor(FormService, 15)\n            FormService.beforeSave = ->\n                FormService.model.html = AceService.editor.getValue()\n\n        $scope.generateUrl = (event) ->\n            $http.post '/api/translit/to-url',\n                text: FormService.model.keyphrase\n            .then (response) ->\n                FormService.model.url = response.data\n                $scope.checkExistance 'url',\n                    target: $(event.target).closest('div').find('input')\n\n        $scope.checkExistance = (field, event) ->\n            Page.checkExistance\n                id: FormService.model.id\n                field: field\n                value: FormService.model[field]\n            , (response) ->\n                element = $(event.target)\n                if response.exists\n                    FormService.error_element = element\n                    element.addClass('has-error').focus()\n                else\n                    FormService.error_element = undefined\n                    element.removeClass('has-error')\n\n        # @todo: объединить с checkExistance\n        $scope.checkUsefulExistance = (field, event, value) ->\n            Page.checkExistance\n                id: FormService.model.id\n                field: field\n                value: value\n            , (response) ->\n                element = $(event.target)\n                if not value or response.exists\n                    FormService.error_element = undefined\n                    element.removeClass('has-error')\n                else\n                    FormService.error_element = element\n                    element.addClass('has-error').focus()\n\n        $scope.addUseful = ->\n            FormService.model.useful.push(angular.copy(empty_useful))\n\n        $scope.addLinkDialog = ->\n            $scope.link_text = AceService.editor.getSelectedText()\n            $('#link-manager').modal 'show'\n\n        $scope.search = (input, promise)->\n            $http.post('api/pages/search', {q: input}, {timeout: promise})\n                .then (response) ->\n                    return response\n\n        $scope.searchSelected = (selectedObject) ->\n            $scope.link_page_id = selectedObject.originalObject.id\n            $scope.$broadcast('angucomplete-alt:changeInput', 'page-search', $scope.link_page_id.toString())\n\n        $scope.addLink = ->\n            link = \"<a href='[link|#{$scope.link_page_id}]'>#{$scope.link_text}</a>\"\n            $scope.link_page_id = undefined\n            $scope.$broadcast('angucomplete-alt:clearInput')\n            AceService.editor.session.replace(AceService.editor.selection.getRange(), link)\n            $('#link-manager').modal 'hide'\n\n        $scope.$watch 'FormService.model.station_id', (newVal, oldVal) ->\n            $timeout -> $('#sort').selectpicker('refresh')\n","angular\n.module 'Egecms'\n    .controller 'ProgrammsIndex', ($scope, $attrs, IndexService, Programm) ->\n        bindArguments $scope, arguments\n        angular.element(document).ready ->\n            IndexService.init(Programm, $scope.current_page, $attrs)\n\n    .controller 'ProgrammsForm', ($scope, $attrs, $timeout, FormService, Programm) ->\n        bindArguments $scope, arguments\n        angular.element(document).ready ->\n            FormService.init(Programm, $scope.id, $scope.model)","angular\n.module 'Egecms'\n.controller 'SassIndex', ($scope, $attrs, IndexService, Sass) ->\n    bindArguments $scope, arguments\n    angular.element(document).ready ->\n        IndexService.init Sass, $scope.current_page, $attrs\n\n.controller 'SassForm', ($scope, FormService, AceService, Sass) ->\n    bindArguments $scope, arguments\n    angular.element(document).ready ->\n        FormService.init Sass, $scope.id, $scope.model\n        FormService.dataLoaded.promise.then ->\n            AceService.initEditor FormService, 30, 'editor', 'ace/mode/css'\n        FormService.beforeSave = ->\n            FormService.model.text = AceService.editor.getValue()\n","angular\n    .module 'Egecms'\n    .controller 'SearchIndex', ($scope, $attrs, $timeout, IndexService, Page, Published, ExportService) ->\n        bindArguments($scope, arguments)\n        ExportService.init({controller: 'pages'})\n\n        angular.element(document).ready ->\n            IndexService.init(Page, $scope.current_page, $attrs, false)\n","angular\n    .module 'Egecms'\n    .controller 'VariablesIndex', ($scope, $attrs, IndexService, Variable) ->\n        bindArguments($scope, arguments)\n        angular.element(document).ready ->\n            IndexService.init(Variable, $scope.current_page, $attrs)\n\n    .controller 'VariablesForm', ($scope, $attrs, $timeout, FormService, AceService, Variable) ->\n        bindArguments($scope, arguments)\n        angular.element(document).ready ->\n            FormService.init(Variable, $scope.id, $scope.model)\n            FormService.dataLoaded.promise.then ->\n                AceService.initEditor(FormService, 30)\n            FormService.beforeSave = ->\n                FormService.model.html = AceService.editor.getValue()\n","# @todo – разобраться как\n# angular.module('Egecms').directive 'bsSelect', ($timeout) ->\n#     restrict: 'A'\n#     require: 'ngModel'\n#     compile: (scope, element, attrs) ->\n#         $(element).selectpicker()\n","# angular.module('Egerep').directive 'comments', ->\n#     restrict: 'E'\n#     templateUrl: 'directives/comments'\n#     scope:\n#         user: '='\n#         entityId: '='\n#         trackLoading: '='\n#         entityType: '@'\n#     controller: ($rootScope, $scope, $timeout, Comment) ->\n#         $scope.show_max = 4                 # сколько комментов показывать в свернутом режиме\n#         $scope.show_all_comments = false    # показать все комментарии?\n#         $scope.is_dragging = false          # комментарий перетаскивается\n#\n#         bindDraggable = (comment_id) ->\n#             $(\"#comment-#{comment_id}\").draggable\n#                 revert: 'invalid'\n#                 activeClass: 'drag-active'\n#                 start: (e, ui) ->\n#                     $scope.is_dragging = true\n#                     $scope.$apply()\n#                 stop: (e, ui) ->\n#                     $scope.is_dragging = false\n#                     $scope.$apply()\n#\n#         $timeout ->\n#             $scope.comments.forEach (comment) ->\n#                 bindDraggable(comment.id)\n#             $(\"#comment-delete-#{$scope.entityType}-#{$scope.entityId}\").droppable\n#                 tolerance: 'pointer'\n#                 hoverClass: 'hovered'\n#                 drop: (e, ui) ->\n#                     $scope.remove($(ui.draggable).data('comment-id'))\n#         , 2000\n#\n#         $scope.showAllComments = ->\n#             $scope.show_all_comments = true\n#             $timeout ->\n#                 $scope.comments.forEach (comment) ->\n#                     bindDraggable(comment.id)\n#\n#         $scope.getComments = ->\n#             if ($scope.show_all_comments or $scope.comments.length <= $scope.show_max) then $scope.comments else _.last($scope.comments, $scope.show_max - 1)\n#\n#         # перезагружаем комменты, если меняется entity_id\n#         $scope.$watch 'entityId', (newVal, oldVal) ->\n#             $scope.comments = Comment.query\n#                 entity_type: $scope.entityType\n#                 entity_id: newVal\n#             , ->\n#                 $rootScope.loaded_comments++ if $scope.trackLoading\n#\n#         $scope.formatDateTime = (date) ->\n#             moment(date).format \"DD.MM.YY в HH:mm\"\n#\n#         $scope.startCommenting = (event) ->\n#             $scope.start_commenting = true\n#             $timeout ->\n#                 $(event.target).parent().find('input').focus()\n#\n#         $scope.endCommenting = ->\n#             $scope.comment = ''\n#             $scope.start_commenting = false\n#\n#         $scope.remove = (comment_id) ->\n#             _.find($scope.comments, {id: comment_id}).$remove()\n#             $scope.comments = _.without($scope.comments, _.findWhere($scope.comments, {id: comment_id}))\n#\n#         $scope.edit = (comment, event) ->\n#             old_text    = comment.comment\n#             element     = $(event.target)\n#\n#             element.unbind('keydown').unbind('blur')\n#\n#             element.attr('contenteditable', 'true').focus()\n#                 .on 'keydown', (e) ->\n#                     console.log old_text\n#                     if e.keyCode is 13\n#                         $(@).removeAttr('contenteditable').blur()\n#                         comment.comment = $(@).text()\n#                         comment.$update()\n#                     if e.keyCode is 27\n#                         $(@).blur()\n#\n#                 .on 'blur', (e) ->\n#                     if element.attr 'contenteditable'\n#                         console.log old_text\n#                         element.removeAttr('contenteditable').html old_text\n#             return\n#             # setEndOfContenteditable(event.target)\n#\n#         $scope.submitComment = (event) ->\n#             if event.keyCode is 13\n#                 new_comment = new Comment\n#                     comment: $scope.comment\n#                     user_id: $scope.user.id\n#                     entity_id: $scope.entityId\n#                     entity_type: $scope.entityType\n#                 new_comment.$save()\n#                     .then (response)->\n#                         console.log response\n#                         new_comment.user = $scope.user\n#                         new_comment.id = response.id\n#                         $scope.comments.push new_comment\n#                         $timeout ->\n#                             bindDraggable(new_comment.id)\n#                 $scope.endCommenting()\n#\n#             if event.keyCode is 27\n#                 $(event.target).blur()\n","angular.module('Egecms').directive 'ngCounter', ($timeout) ->\n    restrict: 'A'\n    link: ($scope, $element, $attrs) ->\n        $($element).parent().append \"<span class='input-counter'></span>\"\n        counter = $($element).parent().find('.input-counter')\n\n        $($element).on 'keyup', -> counter.text $(@).val().length or ''\n\n        $timeout ->\n            $($element).keyup()\n        , 500\n","angular.module('Egecms').directive 'editable', ->\n    restrict: 'A'\n    link: ($scope, $element, $attrs) ->\n        $element.on 'click', (event) ->\n            $element.attr('contenteditable', 'true').focus()\n        .on 'keydown', (event) ->\n            if event.keyCode in [13, 27]\n                event.preventDefault()\n                $element.blur()\n        .on 'blur', (event) ->\n            $scope.onEdit($element.attr('editable'), event)\n            $element.removeAttr('contenteditable')\n","# angular.module('Egerep').directive 'email', ->\n#     restrict: 'E'\n#     templateUrl: 'directives/email'\n#     scope:\n#         entity: '='\n#     controller: ($scope) ->\n#         $scope.send = ->\n#             $('#email-modal').modal 'show'\n#     # controller: ($scope, $timeout, Email) ->\n#     #     # массовая отправка?\n#     #     $scope.mass = false\n#     #\n#     #     # подсчитать СМС\n#     #     $scope.smsCount = ->\n#     #         SmsCounter.count($scope.message || '').messages\n#     #\n#     #     # отправить\n#     #     $scope.send = ->\n#     #         if $scope.message\n#     #             sms = new Sms\n#     #                 message: $scope.message\n#     #                 to: $scope.number\n#     #                 mass: $scope.mass\n#     #             sms.$save()\n#     #\n#     #     # подгружаем историю, если номер телефона меняется\n#     #     $scope.$watch 'number', (newVal, oldVal) ->\n#     #         console.log $scope.$parent.formatDateTime($scope.created_at)\n#     #         $scope.history = Sms.query({number: newVal}) if newVal\n","# angular.module('Egerep').directive 'inputComment', ->\n#     restrict: 'E'\n#     templateUrl: 'directives/input-comment'\n#     scope:\n#         entity: '='\n#         commentField: '@'\n#     controller: ($scope, $timeout) ->\n#         $scope.is_being_commented = false\n#\n#         $scope.blurComment = ->\n#             $scope.is_being_commented = false\n#\n#         $scope.focusComment = ->\n#             $scope.is_being_commented = true\n#\n#         $scope.startComment = (event) ->\n#             $scope.is_being_commented = true\n#             $timeout ->\n#                 $(event.target).parent().children('input').focus()\n#\n#         $scope.endComment =  (event) ->\n#             if event.keyCode is 13\n#                 $(event.target).blur()\n#                 return\n","angular.module 'Egecms'\n    .directive 'ngMulti', ->\n        restrict: 'E'\n        replace: true\n        scope:\n            object: '='\n            model: '='\n            label: '@'\n            noneText: '@'\n        templateUrl: 'directives/ngmulti'\n        controller: ($scope, $element, $attrs, $timeout) ->\n            $element.selectpicker\n                noneSelectedText: $scope.noneText\n\n            $scope.$watchGroup ['model', 'object'], (newVal) ->\n                $element.selectpicker 'refresh' if newVal\n","angular.module 'Egecms'\n    .directive 'orderBy', ->\n        restrict: 'E'\n        replace: true\n        scope:\n            options: '='\n        templateUrl: 'directives/order-by'\n        link: ($scope, $element, $attrs) ->\n            IndexService = $scope.$parent.IndexService\n            local_storage_key = 'sort-' + IndexService.controller\n\n            syncIndexService = (sort) ->\n                IndexService.sort = sort\n                IndexService.current_page = 1\n                IndexService.loadPage()\n\n            $scope.setSort = (sort) ->\n                $scope.sort = sort\n                localStorage.setItem(local_storage_key, sort)\n                syncIndexService(sort)\n\n            $scope.sort = localStorage.getItem(local_storage_key)\n\n            if $scope.sort is null\n                $scope.setSort(0)\n            else\n                syncIndexService($scope.sort)\n","# angular.module('Egerep').directive 'pencilInput', ->\n#     restrict: 'E'\n#     replace: true\n#     templateUrl: 'directives/pencil-input'\n#     scope:\n#         model: '='\n#     controller: ($scope, $timeout, $element, $controller) ->\n#         $scope.is_being_commented = false\n#\n#         $scope.blurComment = ->\n#             $scope.is_being_commented = false\n#\n#         $scope.focusComment = ->\n#             $scope.is_being_commented = true\n#\n#         $scope.startComment = (event) ->\n#             $scope.is_being_commented = true\n#             $timeout ->\n#                 $(event.target).parent().children('div').focus()\n#\n#         $scope.watchEnter = (event) ->\n#             if event.keyCode in [13, 27]\n#                 # @todo: надо изменить\n#                 if event.keyCode is 13\n#                     $scope.model = $(event.target).parent().children('div').text()\n#\n#                 $(event.target).parent().children('div').text($scope.model)\n#                 event.preventDefault()\n#                 $(event.target).blur()\n#             return\n","# angular.module('Egerep').directive 'phones', ->\n#     restrict: 'E'\n#     templateUrl: 'directives/phones'\n#     scope:\n#         entity: '='\n#     controller: ($scope, $timeout, $rootScope, PhoneService, UserService) ->\n#         $scope.PhoneService = PhoneService\n#         $scope.UserService  = UserService\n#\n#         console.log $scope.entityType\n#\n#         # level depth\n#         $rootScope.dataLoaded.promise.then (data) ->\n#             $scope.level = if $scope.entity.phones and $scope.entity.phones.length then $scope.entity.phones.length else 1\n#\n#         $scope.nextLevel = ->\n#             $scope.level++\n#\n#         $scope.phoneMaskControl = (event) ->\n#             el = $(event.target)\n#             # grabs string phone_2 from object model.phone2\n#             # so it can be accessible by key\n#             phone_id = el.attr('ng-model').split('.')[1]\n#             $scope.entity[phone_id] = $(event.target).val()\n#\n#         $scope.isFull = (number) ->\n#             return false if number is undefined or number is \"\"\n#             !number.match(/_/)\n#\n#         # отправить смс\n#         $scope.sms = (number) ->\n#             $('#sms-modal').modal 'show'\n#             $rootScope.sms_number = number\n#\n#         # информация по api\n#         $scope.info = (number) ->\n#             $scope.api_number = number\n#             $scope.mango_info = null\n#             $('#api-phone-info').modal 'show'\n#             PhoneService.info(number).then (response) ->\n#                 console.log response.data\n#                 $scope.mango_info = response.data\n#\n#         $scope.formatDateTime = (date) ->\n#             moment(date).format \"DD.MM.YY в HH:mm\"\n#\n#         $scope.time = (seconds) ->\n#             moment({}).seconds(seconds).format(\"mm:ss\")\n#\n#         $scope.getNumberTitle = (number) ->\n#             console.log number, $scope.api_number\n#             return 'текущий номер' if number is PhoneService.clean($scope.api_number)\n#             number\n#\n#         recodringLink = (recording_id) ->\n#             api_key   = 'goea67jyo7i63nf4xdtjn59npnfcee5l'\n#             api_salt  = 't9mp7vdltmhn0nhnq0x4vwha9ncdr8pa'\n#             timestamp = moment().add(5, 'minute').unix()\n#\n#             sha256 = new jsSHA('SHA-256', 'TEXT')\n#             sha256.update(api_key + timestamp + recording_id + api_salt)\n#             sign = sha256.getHash('HEX')\n#\n#             return \"https://app.mango-office.ru/vpbx/queries/recording/link/#{recording_id}/play/#{api_key}/#{timestamp}/#{sign}\"\n#\n#         $scope.play = (recording_id) ->\n#             $scope.audio.pause() if $scope.audio\n#             $scope.audio = new Audio recodringLink(recording_id)\n#             $scope.audio.play()\n#             $scope.is_playing = recording_id\n#\n#         $scope.isPlaying = (recording_id) ->\n#             $scope.is_playing is recording_id\n#\n#         $scope.stop = (recording_id) ->\n#             $scope.is_playing = null\n#             $scope.audio.pause()\n#\n#         $scope.disconnectReason = (data) ->\n#             # return 'НБТ' if data.to_extension is '' and data.disconnect_reason is '1100'\n#             data.disconnect_reason\n","angular.module 'Egecms'\n    .directive 'plural', ->\n        restrict: 'E'\n        scope:\n            count: '='      # кол-во\n            type: '@'       # тип plural age | student | ...\n            noneText: '@'   # текст, если кол-во равно нулю\n        templateUrl: 'directives/plural'\n        controller: ($scope, $element, $attrs, $timeout) ->\n            $scope.textOnly = $attrs.hasOwnProperty('textOnly')\n            $scope.hideZero = $attrs.hasOwnProperty('hideZero')\n\n            $scope.when =\n                'age': ['год', 'года', 'лет']\n                'student': ['ученик', 'ученика', 'учеников']\n                'minute': ['минуту', 'минуты', 'минут']\n                'hour': ['час', 'часа', 'часов']\n                'day': ['день', 'дня', 'дней']\n                'meeting': ['встреча', 'встречи', 'встреч']\n                'score': ['балл', 'балла', 'баллов']\n                'rubbles': ['рубль', 'рубля', 'рублей']\n                'lesson': ['занятие', 'занятия', 'занятий']\n                'client': ['клиент', 'клиента', 'клиентов']\n                'mark': ['оценки', 'оценок', 'оценок']\n                'request': ['заявка', 'заявки', 'заявок']\n","# angular.module 'Egerep'\n#     .directive 'plus', ->\n#         restrict: 'E'\n#         scope:\n#             previous: '='\n#             count: '='\n#         templateUrl: 'directives/plus'\n","angular.module 'Egecms'\n.directive 'programmItem', ->\n    restrict: 'E'\n    templateUrl: 'directives/programm-item'\n    scope:\n        item:   '='\n        level:  '=?'\n        levelstring: '='\n        delete: '&delete'\n    controller: ($timeout, $element, $scope) ->\n        $scope.onEdit = (item, event) ->\n            value = $(event.target).text().trim()\n            if value\n                $scope.item.title = value\n            else\n                $(event.target).text $scope.item.title\n\n        $scope.addChild = ->\n            $scope.is_adding = true\n            $timeout ->\n                $element.find(\"input\").last().focus()\n\n        $scope.createChild = (event) ->\n            if $scope.new_item.title and event?.keyCode is 13\n                $scope.item.content = [] if not $scope.item.content\n                if $scope.new_item.title.length\n                    $scope.item.content.push $scope.new_item\n                    resetNewItem()\n\n            if event?.keyCode is 27\n                $(event.target).blur()\n\n        $scope.deleteChild = (child) ->\n            $scope.item.content = _.without $scope.item.content, child\n\n        $scope.blur = ->\n            $scope.is_adding = false\n            $scope.is_editing = false\n\n        $scope.getChildLevelString = (child_index) ->\n            str = if $scope.levelstring then $scope.levelstring else ''\n            str + (child_index + 1) + '.'\n\n        resetNewItem = ->\n            $scope.new_item = {title: '', content: []}\n\n        $scope.level = 1 if not $scope.level\n        resetNewItem()","angular.module 'Egecms'\n    .directive 'search', ->\n        restrict: 'E'\n        templateUrl: 'directives/search'\n        scope: {}\n        link: ->\n            $('.search-icon').on 'click', -> $('#search-app').modal('show')\n        controller: ($scope, $timeout, $http, Published, FactoryService) ->\n            bindArguments($scope, arguments)\n            $scope.conditions = []\n            $scope.options = [\n                {title: 'ключевая фраза', value: 'keyphrase', type: 'text'},\n                {title: 'отображаемый URL', value: 'url', type: 'text'},\n                {title: 'title', value: 'title', type: 'text'},\n                {title: 'публикация', value: 'published', type: 'published'},\n                {title: 'сео (стационар)', value: 'seo_desktop', type: 'seo_desktop'},\n                {title: 'сео (мобильная)', value: 'seo_mobile', type: 'seo_mobile'},\n                {title: 'h1 вверху', value: 'h1', type: 'text'},\n                {title: 'h1 внизу', value: 'h1_bottom', type: 'text'},\n                {title: 'meta keywords', value: 'keywords', type: 'text'},\n                {title: 'meta description', value: 'desc', type: 'text'},\n                {title: 'предметы', value: 'subjects', type: 'subjects'},\n                {title: 'выезд', value: 'place', type: 'place'},\n                {title: 'метро', value: 'station_id', type: 'station_id'},\n                {title: 'сортировка', value: 'sort', type: 'sort'},\n                {title: 'скрытый фильтр', value: 'hidden_filter', type: 'text'},\n                {title: 'содержание раздела', value: 'html', type: 'textarea'}\n            ]\n\n            $scope.getOption = (condition) -> $scope.options[condition.option]\n\n            $scope.addCondition = ->\n                $scope.conditions.push({option: 0})\n                $timeout -> $('.selectpicker').selectpicker()\n\n            $scope.addCondition()\n\n            $scope.selectControl = (condition) ->\n                condition.value = null\n                switch $scope.getOption(condition).type\n                    when 'published', 'seo_desktop', 'seo_mobile' then condition.value = 0\n                    when 'subjects'\n                        if $scope.subjects is undefined then FactoryService.get('subjects', 'name').then (response) ->\n                            $scope.subjects = response.data\n                    when 'place'\n                        if $scope.places is undefined then FactoryService.get('places', 'serp').then (response) ->\n                            $scope.places = response.data\n                    when 'station_id'\n                        if $scope.stations is undefined then FactoryService.get('stations', 'title', 'title').then (response) ->\n                            $scope.stations = response.data\n                    when 'sort'\n                        if $scope.sort is undefined then FactoryService.get('sort').then (response) ->\n                            $scope.sort = response.data\n                # $('.search-value-control').selectpicker('refresh')\n\n            $scope.search = ->\n                search = {}\n                $scope.conditions.forEach (condition) ->\n                    search[$scope.getOption(condition).value] = condition.value\n                # long input bug fix – cookie can only store N bytes\n                search.html = search.html.substr(0, 200) if search.hasOwnProperty('html')\n\n                $.cookie('search', JSON.stringify(search), { expires: 365, path: '/' })\n                ajaxStart()\n                $scope.searching = true\n                window.location = 'search'\n","angular.module 'Egecms'\n    .directive 'ngSelectNew', ->\n        restrict: 'E'\n        replace: true\n        scope:\n            object: '='\n            model: '='\n            noneText: '@'\n            label: '@'\n            field: '@'\n        templateUrl: 'directives/select-new'\n        controller: ($scope, $element, $attrs, $timeout) ->\n            # выбираем первое значение по умолчанию, если нет noneText\n            if not $scope.noneText\n                value = _.first Object.keys($scope.object)\n                value = $scope.object[value][$scope.field] if $scope.field\n\n                if not $scope.model #race condition fix\n                    $scope.model = value\n\n            $timeout ->\n                $element.selectpicker\n                    noneSelectedText: $scope.noneText\n            , 100\n\n            $scope.$watchGroup ['model', 'object'], (newVal) ->\n                if newVal\n                    $timeout ->\n                        $element.selectpicker 'refresh'\n","angular.module 'Egecms'\n    .directive 'ngSelect', ->\n        restrict: 'E'\n        replace: true\n        scope:\n            object: '='\n            model: '='\n            noneText: '@'\n            label: '@'\n            field: '@'\n        templateUrl: 'directives/ngselect'\n        controller: ($scope, $element, $attrs, $timeout) ->\n            # выбираем первое значение по умолчанию, если нет noneText\n            if not $scope.noneText\n                if $scope.field\n                    $scope.model = $scope.object[_.first Object.keys($scope.object)][$scope.field]\n                else\n                    $scope.model = _.first Object.keys($scope.object)\n\n            $timeout ->\n                $($element).selectpicker()\n            , 150\n","# angular.module('Egerep').directive 'sms', ->\n#     restrict: 'E'\n#     templateUrl: 'directives/sms'\n#     scope:\n#         number: '='\n#     controller: ($scope, $timeout, Sms) ->\n#         # массовая отправка?\n#         $scope.mass = false\n#\n#         # подсчитать СМС\n#         $scope.smsCount = ->\n#             SmsCounter.count($scope.message || '').messages\n#\n#         # отправить\n#         $scope.send = ->\n#             if $scope.message\n#                 sms = new Sms\n#                     message: $scope.message\n#                     to: $scope.number\n#                     mass: $scope.mass\n#                 sms.$save()\n#                     .then (data) ->\n#                         $scope.history.push(data)\n#                         scrollDown()\n#\n#         # подгружаем историю, если номер телефона меняется\n#         $scope.$watch 'number', (newVal, oldVal) ->\n#             console.log $scope.$parent.formatDateTime($scope.created_at)\n#             $scope.history = Sms.query({number: newVal}) if newVal\n#             scrollDown()\n#\n#         scrollDown = ->\n#             $timeout ->\n#                 $(\"#sms-history\").animate({ scrollTop: $(window).height() }, \"fast\");\n","# angular.module 'Egerep'\n#     .directive 'tutorPhoto', ->\n#         restrict: 'E'\n#         replace: true\n#         scope:\n#             tutor: '='\n#             version: '='\n#         templateUrl: 'directives/tutor-photo'\n","# #\n# # Dependencies: UserService should be available in parent scope!\n# #\n#\n# angular.module 'Egerep'\n#     .directive 'userSwitch', ->\n#         restrict: 'E'\n#         scope:\n#             entity: '='\n#             resource: '='\n#             userId: '@'\n#         templateUrl: 'directives/user-switch'\n#         controller: ($scope) ->\n#             $scope.UserService = $scope.$parent.UserService\n","# angular.module 'Egerep'\n#     .directive 'user', ->\n#         restrict: 'E'\n#         scope:\n#             model: '='      # кол-во\n#         templateUrl: 'directives/user'\n","angular.module('Egecms')\n    .value 'Published', [\n        {id:0, title: 'не опубликовано'},\n        {id:1, title: 'опубликовано'},\n    ]\n    .value 'UpDown', [\n        {id: 1, title: 'вверху'},\n        {id: 2, title: 'внизу'},\n    ]\n","angular.module('Egecms')\n    .factory 'Variable', ($resource) ->\n        $resource apiPath('variables'), {id: '@id'}, updatable()\n\n    .factory 'Sass', ($resource) ->\n        $resource apiPath('sass'), {id: '@id'}, updatable()\n\n    .factory 'Page', ($resource) ->\n        $resource apiPath('pages'), {id: '@id'},\n            update:\n                method: 'PUT'\n            checkExistance:\n                method: 'POST'\n                url: apiPath('pages', 'checkExistance')\n\n    .factory 'Programm', ($resource) ->\n        $resource apiPath('programms'), {id: '@id'}, updatable()\n\napiPath = (entity, additional = '') ->\n    \"api/#{entity}/\" + (if additional then additional + '/' else '') + \":id\"\n\n\nupdatable = ->\n    update:\n        method: 'PUT'\ncountable = ->\n    count:\n        method: 'GET'\n","angular.module 'Egecms'\n    .service 'AceService', ->\n        this.initEditor = (FormService, minLines = 30, id = 'editor', mode = 'ace/mode/html') ->\n            this.editor = ace.edit(id)\n            this.editor.getSession().setMode(mode)\n            this.editor.getSession().setUseWrapMode(true)\n            this.editor.setOptions\n                minLines: minLines\n                maxLines: Infinity\n            this.editor.commands.addCommand\n                name: 'save',\n                bindKey:\n                    win: 'Ctrl-S'\n                    mac: 'Command-S'\n                exec: (editor) ->\n                    FormService.edit()\n        this\n","angular.module 'Egecms'\n    .service 'IndexService', ($rootScope) ->\n        this.filter = ->\n            $.cookie(this.controller, JSON.stringify(this.search), { expires: 365, path: '/' })\n            this.current_page = 1\n            this.pageChanged()\n\n        this.max_size = 10\n\n        this.init = (Resource, current_page, attrs, load_page = true) ->\n            $rootScope.frontend_loading = true\n            this.Resource = Resource\n            this.current_page = parseInt(current_page)\n            this.controller = attrs.ngController.toLowerCase().slice(0, -5)\n            this.search = if $.cookie(this.controller) then JSON.parse($.cookie(this.controller)) else {}\n            this.loadPage() if load_page\n\n        this.loadPage = ->\n            params = {page: this.current_page}\n            params.sort = this.sort if this.sort isnt undefined\n            this.Resource.get params, (response) =>\n                this.page = response\n                $rootScope.frontend_loading = false\n\n        this.pageChanged = ->\n            $rootScope.frontend_loading = true\n            this.loadPage()\n            this.changeUrl()\n\n        # change browser user / history push\n        this.changeUrl = ->\n            window.history.pushState('', '', this.controller + '?page=' + this.current_page)\n\n        this\n    .service 'FormService', ($rootScope, $q, $timeout) ->\n        this.init = (Resource, id, model) ->\n            this.dataLoaded = $q.defer()\n            $rootScope.frontend_loading = true\n            this.Resource = Resource\n            this.saving = false\n            if id\n                this.model = Resource.get({id: id}, => modelLoaded())\n            else\n                this.model = new Resource(model)\n                modelLoaded()\n\n\n        modelLoaded = =>\n            $rootScope.frontend_loading = false\n            $timeout =>\n                this.dataLoaded.resolve(true)\n                $('.selectpicker').selectpicker 'refresh'\n\n        beforeSave = =>\n            if this.error_element is undefined\n                ajaxStart()\n                this.beforeSave() if this.beforeSave isnt undefined\n                this.saving = true\n                true\n            else\n                $(this.error_element).focus()\n                # если нет ошибок, вернуть true и обработать в save/create\n                false\n\n        # вырезаем MODEL из url типа /website/model/create\n        modelName = ->\n            l = window.location.pathname.split('/')\n            model_name = l[l.length - 2]\n            model_name = l[l.length - 3] if $.isNumeric(model_name)\n            model_name\n\n        this.delete = (event) ->\n            bootbox.confirm \"Вы уверены, что хотите #{$(event.target).text()} ##{this.model.id}?\", (result) =>\n                if result is true\n                    beforeSave()\n                    this.model.$delete().then ->\n                        redirect modelName()\n\n        this.edit = ->\n            return if not beforeSave()\n            this.model.$update().then =>\n                this.saving = false\n                ajaxEnd()\n            , (response) ->\n                notifyError(response.data)\n                this.saving = false\n                ajaxEnd()\n\n        this.create = ->\n            return if not beforeSave()\n            this.model.$save().then (response) =>\n                redirect modelName() + \"/#{response.id}/edit\"\n            , (response) =>\n                this.saving = false\n                ajaxEnd()\n                this.onCreateError(response)\n\n        this\n","angular.module 'Egecms'\n\t.service 'ExportService', ($rootScope, FileUploader) ->\n\t\tbindArguments(this, arguments)\n\t\tthis.init = (options) ->\n\t\t\tthis.controller = options.controller\n\t\t\tthis.FileUploader.FileSelect.prototype.isEmptyAfterSelection = ->\n\t\t\t\ttrue\n\n\t\t\tthis.uploader = new this.FileUploader\n\t\t\t\turl: this.controller + \"/import\"\n\t\t\t\talias: 'imported_file'\n\t\t\t\tautoUpload: true\n\t\t\t\tmethod: 'post'\n\t\t\t\tremoveAfterUpload: true\n\t\t\t\tonCompleteItem: (i, response, status) ->\n\t\t\t\t\tnotifySuccess 'Импортировано' if status is 200\n\t\t\t\t\tnotifyError 'Ошибка импорта' if status isnt 200\n\t\t\t\tonWhenAddingFileFailed  = (item, filter, options) ->\n\t\t\t\t\tif filter.name is \"queueLimit\"\n\t\t\t\t\t\tthis.clearQueue()\n\t\t\t\t\t\tthis.addToQueue(item)\n\n\t\tthis.import = (e) ->\n\t\t\te.preventDefault()\n\t\t\t$('#import-button').trigger 'click'\n\t\t\treturn\n\n\t\tthis.exportDialog = ->\n\t\t\t$('#export-modal').modal 'show'\n\t\t\treturn false\n\n\t\tthis.export = ->\n\t\t\twindow.location = \"/#{ this.controller }/export?field=#{ this.export_field }\"\n\t\t\t$('#export-modal').modal 'hide'\n\t\t\treturn false\n\t\tthis\n","angular.module 'Egecms'\n    .service 'FactoryService', ($http) ->\n        this.get = (table, select = null, orderBy = null)->\n            $http.post 'api/factory',\n                table: table\n                select: select\n                orderBy: orderBy\n\n        this\n",""]}